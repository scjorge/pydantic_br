name: CI

on:
  push:
    branches:
      - master
    tags:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./pydantic_br
        
    steps:
      - name: Action Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8
      
      - name: Deactivate virtal env Poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --only lint
          
      - name: black
        run: poetry run black --check .

      - name: isort
        run: poetry run isort --check .

      - name: flake8
        run: poetry run flake8 .
     
  test:
    name: test ${{ matrix.os }} / ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ['3.8', '3.9', '3.10', '3.11', 'pypy3.8', 'pypy3.9']

    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      DEPS: yes

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: Gr1N/setup-poetry@v8

    - name: Deactivate virtal env Poetry
      run: poetry config virtualenvs.create false
    
    - name: Install dependencies
      run: poetry install --only test
    
    - name: pytest
      run: poetry run pytest --cov --cov-report xml tests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}